-- 本例子测试 如何数据源带有event_time 可直接设置 WATERMARK
create function get_json_object as 'ideal.sylph.runner.flink.udf.UDFJson';

create source table topic1(
    key varchar,
    message varchar,     -- json
    event_time bigint,
    proctime as proctime()
) with (
    type = 'test'
);

-- 定义数据流输出位置
create sink table print_table_sink(
    uid varchar,
    name varchar,
    city varchar,
    cnt long,
    window_time varchar
) with (
    type = 'console',   -- print console
    other = 'demo001'
);

-- 定义维表
create batch table users(
    id varchar,
    name varchar,
    city varchar
) with (
    type = 'mysql',   -- or ideal.sylph.plugins.mysql.MysqlAsyncJoin
    userName = 'demo',
    password = 'demo',
    url = 'jdbc:mysql://localhost:3306/pop?characterEncoding=utf-8&useSSL=false'
    -- query = 'select * from users where ...'  --可以下推谓词
);

-- 描述数据流计算过程
insert into print_table_sink
with tb1 as (
    select key, get_json_object(message,'user_id') as uid , get_json_object(message,'ip') as ip, event_time, proctime
    from topic1
),tb2 as (
    select uid,
    count(distinct key) as cnt,
    cast(TUMBLE_START(proctime,INTERVAL '5' SECOND) as varchar)|| '-->' 
    || cast(TUMBLE_END(proctime,INTERVAL '5' SECOND) as varchar) AS start_time
    from tb1 where uid is not null
    group by uid,TUMBLE(proctime,INTERVAL '5' SECOND)
) 
select tb2.uid, users.name ,users.city, tb2.cnt, tb2.start_time 
from tb2 left join users on tb2.uid = users.id
having 1=1